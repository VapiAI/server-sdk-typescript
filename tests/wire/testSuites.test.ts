/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool.js";
import { VapiClient } from "../../src/Client";

describe("TestSuites", () => {
    test("TestSuiteController_findAllPaginated", async () => {
        const server = mockServerPool.createServer();
        const client = new VapiClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            results: [
                {
                    id: "id",
                    orgId: "orgId",
                    createdAt: "2024-01-15T09:30:00Z",
                    updatedAt: "2024-01-15T09:30:00Z",
                    name: "name",
                },
            ],
            metadata: { itemsPerPage: 1.1, totalItems: 1.1, currentPage: 1.1 },
        };
        server.mockEndpoint().get("/test-suite").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.testSuites.testSuiteControllerFindAllPaginated();
        expect(response).toEqual({
            results: [
                {
                    id: "id",
                    orgId: "orgId",
                    createdAt: "2024-01-15T09:30:00Z",
                    updatedAt: "2024-01-15T09:30:00Z",
                    name: "name",
                },
            ],
            metadata: {
                itemsPerPage: 1.1,
                totalItems: 1.1,
                currentPage: 1.1,
            },
        });
    });

    test("TestSuiteController_create", async () => {
        const server = mockServerPool.createServer();
        const client = new VapiClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = {
            id: "id",
            orgId: "orgId",
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
            name: "name",
            testerPlan: {
                assistant: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    variableValues: { key: "value" },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
            },
            targetPlan: {
                phoneNumberId: "phoneNumberId",
                phoneNumber: { provider: "test-suite", number: "number" },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    variableValues: { key: "value" },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
            },
        };
        server
            .mockEndpoint()
            .post("/test-suite")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.testSuites.testSuiteControllerCreate();
        expect(response).toEqual({
            id: "id",
            orgId: "orgId",
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
            name: "name",
            testerPlan: {
                assistant: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    variableValues: {
                        key: "value",
                    },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
            },
            targetPlan: {
                phoneNumberId: "phoneNumberId",
                phoneNumber: {
                    provider: "test-suite",
                    number: "number",
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    variableValues: {
                        key: "value",
                    },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
            },
        });
    });

    test("TestSuiteController_findOne", async () => {
        const server = mockServerPool.createServer();
        const client = new VapiClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "id",
            orgId: "orgId",
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
            name: "name",
            testerPlan: {
                assistant: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    variableValues: { key: "value" },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
            },
            targetPlan: {
                phoneNumberId: "phoneNumberId",
                phoneNumber: { provider: "test-suite", number: "number" },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    variableValues: { key: "value" },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
            },
        };
        server.mockEndpoint().get("/test-suite/id").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.testSuites.testSuiteControllerFindOne("id");
        expect(response).toEqual({
            id: "id",
            orgId: "orgId",
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
            name: "name",
            testerPlan: {
                assistant: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    variableValues: {
                        key: "value",
                    },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
            },
            targetPlan: {
                phoneNumberId: "phoneNumberId",
                phoneNumber: {
                    provider: "test-suite",
                    number: "number",
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    variableValues: {
                        key: "value",
                    },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
            },
        });
    });

    test("TestSuiteController_remove", async () => {
        const server = mockServerPool.createServer();
        const client = new VapiClient({ token: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "id",
            orgId: "orgId",
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
            name: "name",
            testerPlan: {
                assistant: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    variableValues: { key: "value" },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
            },
            targetPlan: {
                phoneNumberId: "phoneNumberId",
                phoneNumber: { provider: "test-suite", number: "number" },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    variableValues: { key: "value" },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
            },
        };
        server.mockEndpoint().delete("/test-suite/id").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.testSuites.testSuiteControllerRemove("id");
        expect(response).toEqual({
            id: "id",
            orgId: "orgId",
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
            name: "name",
            testerPlan: {
                assistant: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    variableValues: {
                        key: "value",
                    },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
            },
            targetPlan: {
                phoneNumberId: "phoneNumberId",
                phoneNumber: {
                    provider: "test-suite",
                    number: "number",
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    variableValues: {
                        key: "value",
                    },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
            },
        });
    });

    test("TestSuiteController_update", async () => {
        const server = mockServerPool.createServer();
        const client = new VapiClient({ token: "test", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = {
            id: "id",
            orgId: "orgId",
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
            name: "name",
            testerPlan: {
                assistant: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    variableValues: { key: "value" },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
            },
            targetPlan: {
                phoneNumberId: "phoneNumberId",
                phoneNumber: { provider: "test-suite", number: "number" },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: { model: "claude-3-opus-20240229", provider: "anthropic" },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: { voices: [{ cachingEnabled: true, provider: "azure", voiceId: "andrew" }] },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: { provider: "google" },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [{ provider: "twilio", timeout: 60, record: false }],
                    observabilityPlan: { provider: "langfuse", tags: ["tags"] },
                    credentials: [{ provider: "11labs", apiKey: "apiKey" }],
                    hooks: [{ on: "call.ending", do: [{ type: "transfer" }] }],
                    variableValues: { key: "value" },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: { key: "value" },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: { waitSeconds: 0.4 },
                    stopSpeakingPlan: { numWords: 0, voiceSeconds: 0.2, backoffSeconds: 1 },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: { type: { key: "value" }, maxRetries: 0, baseDelaySeconds: 1 },
                    },
                },
            },
        };
        server
            .mockEndpoint()
            .patch("/test-suite/id")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.testSuites.testSuiteControllerUpdate("id");
        expect(response).toEqual({
            id: "id",
            orgId: "orgId",
            createdAt: "2024-01-15T09:30:00Z",
            updatedAt: "2024-01-15T09:30:00Z",
            name: "name",
            testerPlan: {
                assistant: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    variableValues: {
                        key: "value",
                    },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
            },
            targetPlan: {
                phoneNumberId: "phoneNumberId",
                phoneNumber: {
                    provider: "test-suite",
                    number: "number",
                },
                assistantId: "assistantId",
                assistantOverrides: {
                    transcriber: {
                        provider: "assembly-ai",
                        confidenceThreshold: 0.4,
                        enableUniversalStreamingApi: false,
                        formatTurns: false,
                        endOfTurnConfidenceThreshold: 0.7,
                        minEndOfTurnSilenceWhenConfident: 160,
                        wordFinalizationMaxWaitTime: 160,
                        maxTurnSilence: 400,
                    },
                    model: {
                        model: "claude-3-opus-20240229",
                        provider: "anthropic",
                    },
                    voice: {
                        cachingEnabled: true,
                        provider: "azure",
                        voiceId: "andrew",
                        fallbackPlan: {
                            voices: [
                                {
                                    cachingEnabled: true,
                                    provider: "azure",
                                    voiceId: "andrew",
                                },
                            ],
                        },
                    },
                    firstMessage: "Hello! How can I help you today?",
                    firstMessageInterruptionsEnabled: true,
                    firstMessageMode: "assistant-speaks-first",
                    voicemailDetection: {
                        provider: "google",
                    },
                    clientMessages: [
                        "conversation-update",
                        "function-call",
                        "hang",
                        "model-output",
                        "speech-update",
                        "status-update",
                        "transfer-update",
                        "transcript",
                        "tool-calls",
                        "user-interrupted",
                        "voice-input",
                        "workflow.node.started",
                    ],
                    serverMessages: [
                        "conversation-update",
                        "end-of-call-report",
                        "function-call",
                        "hang",
                        "speech-update",
                        "status-update",
                        "tool-calls",
                        "transfer-destination-request",
                        "user-interrupted",
                    ],
                    silenceTimeoutSeconds: 30,
                    maxDurationSeconds: 600,
                    backgroundSound: "off",
                    modelOutputInMessagesEnabled: false,
                    transportConfigurations: [
                        {
                            provider: "twilio",
                            timeout: 60,
                            record: false,
                        },
                    ],
                    observabilityPlan: {
                        provider: "langfuse",
                        tags: ["tags"],
                    },
                    credentials: [
                        {
                            provider: "11labs",
                            apiKey: "apiKey",
                        },
                    ],
                    hooks: [
                        {
                            on: "call.ending",
                            do: [
                                {
                                    type: "transfer",
                                },
                            ],
                        },
                    ],
                    variableValues: {
                        key: "value",
                    },
                    name: "name",
                    voicemailMessage: "voicemailMessage",
                    endCallMessage: "endCallMessage",
                    endCallPhrases: ["endCallPhrases"],
                    metadata: {
                        key: "value",
                    },
                    artifactPlan: {
                        recordingEnabled: true,
                        videoRecordingEnabled: false,
                        pcapEnabled: true,
                        pcapS3PathPrefix: "/pcaps",
                    },
                    startSpeakingPlan: {
                        waitSeconds: 0.4,
                    },
                    stopSpeakingPlan: {
                        numWords: 0,
                        voiceSeconds: 0.2,
                        backoffSeconds: 1,
                    },
                    monitorPlan: {
                        listenEnabled: false,
                        listenAuthenticationEnabled: false,
                        controlEnabled: false,
                        controlAuthenticationEnabled: false,
                    },
                    credentialIds: ["credentialIds"],
                    server: {
                        timeoutSeconds: 20,
                        backoffPlan: {
                            type: {
                                key: "value",
                            },
                            maxRetries: 0,
                            baseDelaySeconds: 1,
                        },
                    },
                },
            },
        });
    });
});
