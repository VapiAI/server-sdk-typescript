/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Vapi from "../index";

export interface HmacAuthenticationPlan {
    type: "hmac";
    /** This is the HMAC secret key used to sign requests. */
    secretKey: string;
    /** This is the HMAC algorithm to use for signing. */
    algorithm: Vapi.HmacAuthenticationPlanAlgorithm;
    /** This is the header name where the signature will be sent. Defaults to 'x-signature'. */
    signatureHeader?: string;
    /** This is the header name where the timestamp will be sent. Defaults to 'x-timestamp'. */
    timestampHeader?: string;
    /** This is the prefix for the signature. For example, 'sha256=' for GitHub-style signatures. */
    signaturePrefix?: string;
    /** Whether to include a timestamp in the signature payload. Defaults to true. */
    includeTimestamp?: boolean;
    /** Custom payload format. Use {body} for request body, {timestamp} for timestamp, {method} for HTTP method, {url} for URL, {svix-id} for unique message ID. Defaults to '{timestamp}.{body}'. */
    payloadFormat?: string;
    /** This is the header name where the unique message ID will be sent. Used for Svix-style webhooks. */
    messageIdHeader?: string;
    /** The encoding format for the signature. Defaults to 'hex'. */
    signatureEncoding?: Vapi.HmacAuthenticationPlanSignatureEncoding;
    /** Whether the secret key is base64-encoded and should be decoded before use. Defaults to false. */
    secretIsBase64?: boolean;
}
