/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Vapi from "../index.js";

export interface AssemblyAiTranscriber {
    /** This is the transcription provider that will be used. */
    provider: "assembly-ai";
    /** This is the language that will be set for the transcription. */
    language?: "en";
    /**
     * Transcripts below this confidence threshold will be discarded.
     *
     * @default 0.4
     */
    confidenceThreshold?: number;
    /**
     * This enables formatting of transcripts.
     *
     * @default true
     */
    formatTurns?: boolean;
    /**
     * This is the end of turn confidence threshold. The minimum confidence that the end of turn is detected.
     * Note: Only used if startSpeakingPlan.smartEndpointingPlan is not set.
     * @min 0
     * @max 1
     * @default 0.7
     */
    endOfTurnConfidenceThreshold?: number;
    /**
     * This is the minimum end of turn silence when confident in milliseconds.
     * Note: Only used if startSpeakingPlan.smartEndpointingPlan is not set.
     * @default 160
     */
    minEndOfTurnSilenceWhenConfident?: number;
    /**
     * This is the maximum wait time for word finalization in milliseconds.
     * Note: Only used if startSpeakingPlan.smartEndpointingPlan is not set.
     * @default 160
     */
    wordFinalizationMaxWaitTime?: number;
    /**
     * This is the maximum turn silence time in milliseconds.
     * Note: Only used if startSpeakingPlan.smartEndpointingPlan is not set.
     * @default 400
     */
    maxTurnSilence?: number;
    /** The WebSocket URL that the transcriber connects to. */
    realtimeUrl?: string;
    /** Add up to 2500 characters of custom vocabulary. */
    wordBoost?: string[];
    /** The duration of the end utterance silence threshold in milliseconds. */
    endUtteranceSilenceThreshold?: number;
    /**
     * Disable partial transcripts.
     * Set to `true` to not receive partial transcripts. Defaults to `false`.
     */
    disablePartialTranscripts?: boolean;
    /** This is the plan for voice provider fallbacks in the event that the primary voice provider fails. */
    fallbackPlan?: Vapi.FallbackTranscriberPlan;
}
