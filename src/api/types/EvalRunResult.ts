/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Vapi from "../index.js";

export interface EvalRunResult {
    /**
     * This is the status of the eval run result.
     * The status is only 'pass' or 'fail' for an eval run result.
     * Currently, An eval is considered `pass` only if all the Assistant Judge messages are evaluated to pass.
     */
    status: EvalRunResult.Status;
    /**
     * This is the messages of the eval run result.
     * It contains the user/system messages
     */
    messages: EvalRunResult.Messages.Item[];
    /** This is the start time of the eval run result. */
    startedAt: string;
    /** This is the end time of the eval run result. */
    endedAt: string;
}

export namespace EvalRunResult {
    /**
     * This is the status of the eval run result.
     * The status is only 'pass' or 'fail' for an eval run result.
     * Currently, An eval is considered `pass` only if all the Assistant Judge messages are evaluated to pass.
     */
    export type Status = "pass" | "fail";
    export const Status = {
        Pass: "pass",
        Fail: "fail",
    } as const;
    export type Messages = Messages.Item[];

    export namespace Messages {
        export type Item =
            | Vapi.ChatEvalUserMessageMock
            | Vapi.ChatEvalSystemMessageMock
            | Vapi.ChatEvalToolResponseMessageMock
            | Vapi.ChatEvalAssistantMessageMock;
    }
}
