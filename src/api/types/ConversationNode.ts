/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Vapi from "../index";

export interface ConversationNode {
    /**
     * This is the Conversation node. This can be used to start a conversation with the customer.
     *
     * The flow is:
     * - Workflow starts the conversation node
     * - Model is active with the `prompt` and global context.
     * - Model will call a tool to exit this node.
     * - Workflow will extract variables from the conversation.
     * - Workflow continues.
     */
    type: "conversation";
    /** This is the model for the Conversation Task. */
    model?: Vapi.ConversationNodeModel;
    /** These are the options for the assistant's transcriber. */
    transcriber?: Vapi.ConversationNodeTranscriber;
    /** These are the options for the assistant's voice. */
    voice?: Vapi.ConversationNodeVoice;
    prompt?: string;
    /** This is the plan for the global node. */
    globalNodePlan?: Vapi.GlobalNodePlan;
    /** This is the plan that controls the variable extraction from the user's response. */
    variableExtractionPlan?: Vapi.VariableExtractionPlan;
    name: string;
    /** This is whether or not the node is the start of the workflow. */
    isStart?: boolean;
    /** This is for metadata you want to store on the task. */
    metadata?: Record<string, unknown>;
}
