/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Vapi from "../index.js";

export interface SecurityFilterPlan {
    /**
     * Whether the security filter is enabled.
     * @default false
     */
    enabled?: boolean;
    /**
     * Array of security filter types to apply.
     * If array is not empty, only those security filters are run.
     */
    filters?: Vapi.SecurityFilterBase[];
    /**
     * Mode of operation when a security threat is detected.
     * - 'sanitize': Remove or replace the threatening content
     * - 'reject': Replace the entire transcript with replacement text
     * - 'replace': Replace threatening patterns with replacement text
     * @default 'sanitize'
     */
    mode?: SecurityFilterPlan.Mode;
    /**
     * Text to use when replacing filtered content.
     * @default '[FILTERED]'
     */
    replacementText?: string;
}

export namespace SecurityFilterPlan {
    /**
     * Mode of operation when a security threat is detected.
     * - 'sanitize': Remove or replace the threatening content
     * - 'reject': Replace the entire transcript with replacement text
     * - 'replace': Replace threatening patterns with replacement text
     * @default 'sanitize'
     */
    export type Mode = "sanitize" | "reject" | "replace";
    export const Mode = {
        Sanitize: "sanitize",
        Reject: "reject",
        Replace: "replace",
    } as const;
}
